{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","target","value","setState","reset","formSubmit","e","preventDefault","props","onSubmit","this","onChange","type","pattern","title","required","Component","Filter","inputChange","filter","ContactList","contactsData","onRemoveContact","map","item","className","s","listItem","onClick","id","prototypes","PropTypes","array","isRequired","func","App","contacts","addContact","contact","uuidv4","checkedName","find","toLowerCase","alert","prevState","filterContact","includes","removeContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b1c8d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__-8PEv\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleInputChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.formSubmit}>\r\n                <label> Name\r\n                    <input\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label> Number\r\n                    <input\r\n                        value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputChange, filter }) => {\r\n    return (<label>Find contacts by name\r\n        <input\r\n            value={filter}\r\n            onChange={inputChange}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n        />\r\n    </label>)\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    inputChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contactsData, onRemoveContact }) => {\r\n    return (<ul>\r\n        {contactsData.map(item => {\r\n            return (<li key={item.id} className={s.listItem}>\r\n                <p>{item.name} :</p>\r\n                <p>{item.number}</p>\r\n                <button type=\"button\" onClick={() => onRemoveContact(item.id)}>Delete</button>\r\n            </li>)\r\n        })}\r\n    </ul>)\r\n\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.prototypes = {\r\n    contactsData: PropTypes.array.isRequired,\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n}","import { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n    const checkedName = this.state.contacts.find(contact => name.toLowerCase() === contact.name.toLowerCase());\n    checkedName ? alert(`${name} is already in contacts!`) : this.setState(prevState => ({ contacts: [...prevState.contacts, contact] }))\n  }\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  removeContact = (id) => {\n    this.setState(prevState => {\n      return { contacts: prevState.contacts.filter(item => item.id !== id) }\n    })\n  }\n\n  render() {\n    // console.log(this.filterContact())\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter inputChange={this.handleInputChange} filter={this.state.filter} />\n        <ContactList contactsData={this.filterContact()} onRemoveContact={this.removeContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}